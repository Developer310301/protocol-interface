cmake_minimum_required(VERSION 3.18)

set(PROJECT_NAME protocol_interface)
set(PROJECT_BASE_DIR ${CMAKE_CURRENT_LIST_DIR})
set(CMAKE_BINARY_DIR ${PROJECT_BASE_DIR}/build)
set(HEADER_DIR ${PROJECT_BASE_DIR}/include)
set(SOURCE_DIR ${PROJECT_BASE_DIR}/src)
set(OUTPUT_DIR ${PROJECT_BASE_DIR}/bin)
set(STATIC_LIBRARY_TARGET ${PROJECT_NAME}_static)
set(DYNAMIC_LIBRARY_TARGET ${PROJECT_NAME}_dynamic)
project(${PROJECT_NAME})

#get files
file(GLOB_RECURSE HEADERS ${HEADER_DIR}/*.h ${HEADER_DIR}/*.hpp)
file(GLOB_RECURSE SOURCES ${HEADER_DIR}/*.cpp)

#copy header files into bin/protocol_interface headers dir for publish bin dir with library file
file(COPY ${HEADERS} DESTINATION ${OUTPUT_DIR}/${PROJECT_NAME})

add_library(${STATIC_LIBRARY_TARGET} STATIC ${HEADERS} ${SOURCES})
set_target_properties(${STATIC_LIBRARY_TARGET} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR} LINKER_LANGUAGE CXX)
add_library(${DYNAMIC_LIBRARY_TARGET} SHARED ${HEADERS} ${SOURCES})
set_target_properties(${DYNAMIC_LIBRARY_TARGET} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR} LINKER_LANGUAGE CXX)

file(COPY ${HEADERS} DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
file(COPY ${SOURCES} DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})

file(ARCHIVE_CREATE OUTPUT ${OUTPUT_DIR}/${PROJECT_NAME}.zip
    PATHS ${CMAKE_BINARY_DIR}/${PROJECT_NAME}
    FORMAT zip
    VERBOSE
)



